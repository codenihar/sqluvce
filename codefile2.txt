-- Create tables for SALESMAN, CUSTOMER, and ORDERS
CREATE TABLE SALESMAN (
  Salesman_id INT PRIMARY KEY,
  Name VARCHAR(255),
  City VARCHAR(255),
  Commission DECIMAL(10, 2)
);

CREATE TABLE CUSTOMER (
  Customer_id INT PRIMARY KEY,
  Cust_Name VARCHAR(255),
  City VARCHAR(255),
  Grade INT,
  Salesman_id INT,
  FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);

CREATE TABLE ORDERS (
  Ord_No INT PRIMARY KEY,
  Purchase_Amt DECIMAL(10, 2),
  Ord_Date DATE,
  Customer_id INT,
  Salesman_id INT,
  FOREIGN KEY (Customer_id) REFERENCES CUSTOMER(Customer_id),
  FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);

-- Insert sample data into SALESMAN, CUSTOMER, and ORDERS tables
INSERT INTO SALESMAN VALUES
(1001, 'John Doe', 'New York', 0.15),
(1002, 'Jane Doe', 'Los Angeles', 0.20),
(1003, 'Jim Beam', 'Bangalore', 0.12);

INSERT INTO CUSTOMER VALUES
(2001, 'Alpha Corp', 'Bangalore', 2, 1003),
(2002, 'Beta LLC', 'New York', 3, 1001),
(2003, 'Gamma Inc', 'Bangalore', 4, 1003);

INSERT INTO ORDERS VALUES
(3001, 150.00, '2023-04-01', 2001, 1003),
(3002, 250.00, '2023-04-02', 2002, 1001),
(3003, 350.00, '2023-04-03', 2003, 1003);

-- Count customers in Bangalore with grade above average
SELECT COUNT(*) AS Customers_Above_Average
FROM CUSTOMER
WHERE City = 'Bangalore' AND Grade > (
  SELECT AVG(Grade) FROM CUSTOMER WHERE City = 'Bangalore'
);
/* This query counts the number of customers in Bangalore who have a grade above the average grade of customers in Bangalore. */

-- Get salesmen with more than one customer
SELECT S.Name, COUNT(C.Customer_id) AS Num_Customers
FROM SALESMAN S
JOIN CUSTOMER C ON S.Salesman_id = C.Salesman_id
GROUP BY S.Salesman_id
HAVING COUNT(C.Customer_id) > 1;
/* This query lists the salesmen who have more than one customer assigned to them. */

-- Check if salesmen have customers in the same city
SELECT S.Name, 'Has Customers in City' AS Status
FROM SALESMAN S
JOIN CUSTOMER C ON S.Salesman_id = C.Salesman_id AND S.City = C.City
GROUP BY S.Name
UNION
SELECT S.Name, 'No Customers in City' AS Status
FROM SALESMAN S
WHERE NOT EXISTS (
  SELECT 1 FROM CUSTOMER C WHERE S.Salesman_id = C.Salesman_id AND S.City = C.City
);
/* This query checks if each salesman has customers in the same city as themselves. If they do, it returns "Has Customers in City", otherwise it returns "No Customers in City". */

-- Delete orders and salesmen with Salesman_id = 1000 (non-existent in this case)
DELETE FROM ORDERS WHERE Salesman_id = 1000;
DELETE FROM SALESMAN WHERE Salesman_id = 1000;
/* These queries delete orders and salesmen with Salesman_id = 1000, but since this ID does not exist in the sample data, no rows will be deleted. */




-- Lab Record

CREATE TABLE SALESMAN
(SALESMAN_ID NUMBER (4),
NAME VARCHAR2 (20),
CITY VARCHAR2 (20),
COMMISSION VARCHAR2 (20),
PRIMARYKEY (SALESMAN_ID));
CREATE TABLE CUSTOMER1
(CUSTOMER_ID NUMBER (4),
CUST_NAME VARCHAR2 (20),
CITY VARCHAR2 (20),
GRADE NUMBER (3),
PRIMARY KEY (CUSTOMER_ID),
SALESMAN_ID REFERENCES SALESMAN (SALESMAN_ID) ON DELETE SET NULL);
CREATE TABLE ORDERS
(ORD_NO NUMBER (5),
PURCHASE_AMT NUMBER (10, 2),
ORD_DATE DATE,
PRIMARY KEY (ORD_NO),
CUSTOMER_ID REFERENCES CUSTOMER1 (CUSTOMER_ID) ON DELETE CASCADE,
SALESMAN_ID REFERENCES SALESMAN (SALESMAN_ID) ON DELETE CASCADE);

INSERT INTO SALESMAN VALUES (1000, ‗JOHN‘,‘BANGALORE‘,‘25 %‘); INSERT
INTO SALESMAN VALUES (2000, ‗RAVI‘,‘BANGALORE‘,‘20 %‘); INSERT INTO
SALESMAN VALUES (3000, ‗KUMAR‘,‘MYSORE‘,‘15 %‘); INSERT INTO
SALESMAN VALUES (4000, ‗SMITH‘,‘DELHI‘,‘30 %‘);
INSERTINTOSALESMANVALUES(5000,‗HARSHA‘,‘HYDRABAD‘,‘15%‘);
INSERT INTO CUSTOMER1 VALUES (10, ‗PREETHI‘,‘BANGALORE‘, 100, 1000);
INSERT INTO CUSTOMER1 VALUES (11, ‗VIVEK‘,‘MANGALORE‘, 300, 1000);
INSERT INTO CUSTOMER1 VALUES (12, ‗BHASKAR‘,‘CHENNAI‘, 400, 2000);
INSERT INTO CUSTOMER1 VALUES (13, ‗CHETHAN‘,‘BANGALORE‘, 200, 2000);
INSERT INTO CUSTOMER1 VALUES (14, ‗MAMATHA‘,‘BANGALORE‘, 400, 3000);
INSERT INTO ORDERS VALUES (50, 5000, ‗04-MAY-17‘, 10, 1000);
INSERT INTO ORDERS VALUES (51, 450, ‗20-JAN-17‘, 10, 2000);


INSERTINTOORDERSVALUES(52,1000,‗24-FEB-17‘,13,2000);
INSERTINTOORDERSVALUES(53,3500,‗13-APR-17‘,14,3000);
INSERT INTO ORDERS VALUES (54, 550, ‗09-MAR-17‘, 12, 2000);


SELECT GRADE, COUNT (DISTINCT
CUSTOMER_ID) FROMCUSTOMER1
GROUP BY GRADE
HAVING GRADE > (SELECT AVG(GRADE)
FROM CUSTOMER1
WHERE CITY='BANGALORE');


SELECT SALESMAN_ID, NAME FROM
SALESMAN A
WHERE 1 < (SELECT COUNT (*)
FROM CUSTOMER1
WHERE SALESMAN_ID=A.SALESMAN_ID);


SELECT SALESMAN.SALESMAN_ID, NAME, CUST_NAME, COMMISSION FROM
SALESMAN, CUSTOMER1
WHERE SALESMAN.CITY = CUSTOMER1.CITY
UNION
SELECT SALESMAN_ID, NAME, 'NO MATCH', COMMISSION FROM
SALESMAN
WHERE NOT CITY = ANY
(SELECT CITY
FROM CUSTOMER1)
ORDER BY 2 DESC;


CREATE VIEW ELITSALESMAN AS
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME FROM
SALESMAN A, ORDERS B
WHERE A.SALESMAN_ID = B.SALESMAN_ID
AND B.PURCHASE_AMT=(SELECT MAX (PURCHASE_AMT)
FROM ORDERS C
WHERE C.ORD_DATE = B.ORD_DATE);


DELETE FROM SALESMAN
WHERE SALESMAN_ID=1000;