CREATE TABLE ACTOR (
Act_id INT PRIMARY KEY, -- Create a table to store information about
actors
Act_Name VARCHAR(255),
Act_Gender CHAR(1)
);
CREATE TABLE DIRECTOR (
Dir_id INT PRIMARY KEY, -- Create a table to store information about
directors
Dir_Name VARCHAR(255),
Dir_Phone VARCHAR(15)
);
CREATE TABLE MOVIES (
Mov_id INT PRIMARY KEY, -- Create a table to store information about
movies
Mov_Title VARCHAR(255),
Mov_Year INT,
Mov_Lang VARCHAR(50),
Dir_id INT,
FOREIGN KEY (Dir_id) REFERENCES DIRECTOR(Dir_id) -- Create a foreign
key relationship with the DIRECTOR table
);
CREATE TABLE MOVIE_CAST (
Act_id INT,
Mov_id INT,
Role VARCHAR(255),
PRIMARY KEY (Act_id, Mov_id),
FOREIGN KEY (Act_id) REFERENCES ACTOR(Act_id), -- Create a foreign
key relationship with the ACTOR table
FOREIGN KEY (Mov_id) REFERENCES MOVIES(Mov_id) -- Create a foreign
key relationship with the MOVIES table
);
CREATE TABLE RATING (
Mov_id INT,
Rev_Stars INT,
PRIMARY KEY (Mov_id),
FOREIGN KEY (Mov_id) REFERENCES MOVIES(Mov_id) -- Create a foreign
key relationship with the MOVIES table

);
-- Get the titles of movies directed by Hitchcock
SELECT M.Mov_Title
FROM MOVIES M
JOIN DIRECTOR D ON M.Dir_id = D.Dir_id
WHERE D.Dir_Name = 'Hitchcock';
-- Get the distinct titles of movies in which an actor has played more
than one role
SELECT DISTINCT M.Mov_Title
FROM MOVIE_CAST MC
JOIN MOVIES M ON MC.Mov_id = M.Mov_id
WHERE MC.Act_id IN (
SELECT Act_id
FROM MOVIE_CAST
GROUP BY Act_id
HAVING COUNT(Mov_id) > 1
);
-- Get the distinct names of actors who have acted in movies released
before 2000 and also in movies released after 2015
SELECT DISTINCT A.Act_Name
FROM ACTOR A
JOIN MOVIE_CAST MC ON A.Act_id = MC.Act_id
JOIN MOVIES M ON MC.Mov_id = M.Mov_id
WHERE M.Mov_Year < 2000
AND A.Act_id IN (
SELECT MC.Act_id
FROM MOVIE_CAST MC
JOIN MOVIES M ON MC.Mov_id = M.Mov_id
WHERE M.Mov_Year > 2015
);
-- Get the titles of movies along with the highest rating for each
movie
SELECT M.Mov_Title, MAX(R.Rev_Stars) AS Highest_Stars
FROM MOVIES M
JOIN RATING R ON M.Mov_id = R.Mov_id
GROUP BY M.Mov_Title
ORDER BY M.Mov_Title;
-- Update the rating of Spielberg movies to 5

UPDATE RATING
SET Rev_Stars = 5
WHERE Mov_id IN (
SELECT M.Mov_id
FROM MOVIES M
JOIN DIRECTOR D ON M.Dir_id = D.Dir_id
WHERE D.Dir_Name = 'Steven Spielberg');


-- Lab Record

CREATE TABLE ACTOR (
ACT_ID NUMBER (3),
ACT_NAME VARCHAR (20),
ACT_GENDER CHAR (1),
PRIMARY KEY (ACT_ID));
CREATE TABLE DIRECTOR (
DIR_ID NUMBER (3),
DIR_NAME VARCHAR (20),
DIR_PHONE NUMBER (10),
PRIMARY KEY (DIR_ID));
CREATE TABLE MOVIES (
MOV_ID NUMBER (4),
MOV_TITLE VARCHAR (25),
MOV_YEAR NUMBER (4),
MOV_LANG VARCHAR (12),
DIR_ID NUMBER (3),
PRIMARY KEY (MOV_ID),
FOREIGN KEY (DIR_ID) REFERENCES DIRECTOR (DIR_ID));
FOREIGN KEY (DIR_ID) REFERENCES DIRECTOR (DIR_ID));

CREATE TABLE MOVIE_CAST ( ACT_ID
NUMBER (3),
MOV_ID NUMBER(4),
ROLE VARCHAR(10),
PRIMARY KEY (ACT_ID, MOV_ID),
FOREIGN KEY (ACT_ID) REFERENCES ACTOR (ACT_ID), FOREIGN KEY
(MOV_ID) REFERENCES MOVIES (MOV_ID));
CREATE TABLE RATING (
MOV_ID NUMBER (4),
REV_STARS VARCHAR (25),
PRIMARY KEY (MOV_ID),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES (MOV_ID));

INSERT INTO ACTOR VALUES (301,‘ANUSHKA‘,‘F‘);
INSERT INTO ACTOR VALUES (302,‘PRABHAS‘,‘M‘);
INSERT INTO ACTOR VALUES (303,‘PUNITH‘,‘M‘);
INSERT INTO ACTOR VALUES (304,‘JERMY‘,‘M‘);
INSERT INTO DIRECTOR VALUES (60,‘RAJAMOULI‘, 8751611001);
INSERT INTO DIRECTOR VALUES (61,‘HITCHCOCK‘, 7766138911);
INSERT INTO DIRECTOR VALUES (62,‘FARAN‘, 9986776531);
INSERT INTO DIRECTOR VALUES (63,‘STEVEN SPIELBERG‘, 8989776530);
INSERT INTO MOVIES VALUES (1001,‘BAHUBALI-2‘, 2017, ‗TELAGU‘, 60);
INSERT INTO MOVIES VALUES (1002,‘BAHUBALI-1‘, 2015, ‗TELAGU‘, 60);
INSERT INTO MOVIES VALUES (1003,‘AKASH‘, 2008, ‗KANNADA‘, 61); INSERT
INTO MOVIES VALUES (1004,‘WAR HORSE‘, 2011, ‗ENGLISH‘, 63);
INSERT INTO MOVIE_CAST VALUES (301, 1002, ‗HEROINE‘); INSERT
INTO MOVIE_CAST VALUES (301, 1001, ‗HEROINE‘); INSERT INTO
MOVIE_CAST VALUES (303, 1003, ‗HERO‘); INSERT INTO
MOVIE_CAST VALUES (303, 1002, ‗GUEST‘); INSERT INTO
MOVIE_CAST VALUES (304, 1004, ‗HERO‘);
INSERT INTO RATING VALUES (1001,4);
INSERT INTO RATING VALUES (1002,2);


INSERT INTO RATING VALUES (1003, 5);
INSERT INTO RATING VALUES (1004, 4);


SELECT MOV_TITLE
FROM MOVIES
WHERE DIR_ID IN (SELECT DIR_ID
FROM DIRECTOR
WHERE DIR_NAME = ‗HITCHCOCK‘);


SELECT MOV_TITLE
FROM MOVIES M, MOVIE_CAST MV
WHERE M.MOV_ID=MV.MOV_ID AND ACT_ID IN (SELECT ACT_ID
FROM MOVIE_CAST GROUP BY ACT_ID HAVING
COUNT (ACT_ID)>1)
GROUP BY MOV_TITLE HAVING
COUNT (*)>1;


SELECT A.ACT_NAME, A.ACT_NAME, C.MOV_TITLE, C.MOV_YEAR FROM ACTOR
A, MOVIE_CAST B, MOVIES C
WHERE A.ACT_ID=B.ACT_ID
AND B.MOV_ID=C.MOV_ID
AND C.MOV_YEAR NOT BETWEEN 2000 AND 2015;


SELECT MOV_TITLE, MAX (REV_STARS)
FROM MOVIES
INNER JOIN RATING USING (MOV_ID) GROUP
BY MOV_TITLE
HAVING MAX (REV_STARS)>0
ORDER BY MOV_TITLE;


UPDATE RATING
SET REV_STARS=5
WHERE MOV_ID IN (SELECT MOV_ID FROM MOVIES
WHERE DIR_ID IN (SELECT DIR_ID
FROM DIRECTOR
WHERE DIR_NAME = ‗STEVEN
SPIELBERG‘));